[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "meeting-extractor"
version = "0.2.0"
description = "AI驱动会议纪要任务提取工具，智能分析会议内容并生成Excel任务清单"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "会议侠开发团队"},
]
maintainers = [
    {name = "会议侠开发团队"},
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business",
    "Topic :: Text Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "meeting",
    "minutes",
    "tasks",
    "AI",
    "extraction",
    "excel",
    "productivity",
]

dependencies = [
    "volcengine-python-sdk[ark]>=3.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "openpyxl>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pyinstaller>=6.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
]

build = [
    "pyinstaller>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/meeting-extractor/meeting-extractor"
Repository = "https://github.com/meeting-extractor/meeting-extractor"
Documentation = "https://github.com/meeting-extractor/meeting-extractor#readme"
Issues = "https://github.com/meeting-extractor/meeting-extractor/issues"

[project.scripts]
meeting-extractor = "meeting_extractor:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
]

[tool.uv.groups]
build = [
    "pyinstaller>=6.0.0",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/venv/*",
    "*/build/*",
    "*/dist/*",
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
] 
